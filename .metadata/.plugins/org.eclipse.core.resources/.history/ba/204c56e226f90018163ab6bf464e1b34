package leetcode;

import java.awt.print.Printable;
import java.util.HashMap;

/*
 * 	给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。
 * 	你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。
 * 	
 * 	给定 nums = [2, 7, 11, 15], target = 9
 * 	因为 nums[0] + nums[1] = 2 + 7 = 9
 * 	所以返回 [0, 1]
 */

public class TwoSum {
	public static void main(String[] args) {
		int[] nums = {2, 7, 11, 15};
		int target = 9;
		System.out.println("begin");
		twoSum(nums, target);
	}
	
    public static int[] twoSum(int[] nums, int target) {
    	System.out.println("in sum");
    	HashMap<Integer, Integer> map = new HashMap<>();
    	for(int i = 0; i<nums.length;i++) {
    		if(map.get(nums[i]) != null) {
    			int [] res = {map.get(nums[i]), i};
    			return res;
    		}
    		map.put(target-nums[i], i);
    	}
    	int []res = {};
    	System.out.println("all");
    	System.out.println(res[0]+"***"+res[1]);
    	return res;
    }
}
